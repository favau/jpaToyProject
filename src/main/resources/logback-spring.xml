<configuration>
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/application.log</file>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 로그 파일 저장 위치 및 이름 패턴 -->
            <fileNamePattern>logs/application.log.%d{yyyy-MM-dd}.%i</fileNamePattern>

            <!-- 로그 최대 파일 크기 (10MB) -->
            <maxFileSize>10MB</maxFileSize>

            <!-- 최대 보관 개수 (7일) -->
            <maxHistory>7</maxHistory>

            <!-- 총 로그 파일 용량 제한 -->
            <totalSizeCap>1GB</totalSizeCap>
        </rollingPolicy>

        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

     <!-- 콘솔 로그 설정 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>   

    <!-- SQL 쿼리만 로깅하고 다른 JDBC 관련 로그는 비활성화 -->
    <logger name="jdbc.sqlonly" level="INFO" />
    <logger name="jdbc.resultsettable" level="DEBUG" />

    <!-- 다른 JDBC 로거들은 모두 OFF 처리 --> 
    <logger name="jdbc.audit" level="OFF" />
    <logger name="jdbc.resultset" level="OFF" />
    <logger name="jdbc.connection" level="OFF" />
    <logger name="jdbc.sqltiming" level="OFF" />

     <!-- 특정 패키지에 대한 로그 레벨 설정 (DEBUG) -->
    <logger name="com.example.controller" level="DEBUG"/>

    <!-- Hibernate SQL 로그 설정 -->
    <!-- 모든 SQL 쿼리를 로그로 출력 -->
    <logger name="org.hibernate.SQL" level="DEBUG"/>
    <!-- SQL 쿼리에 바인딩되는 파라미터 값들을 로그로 출력 -->
    <logger name="org.hibernate.type.descriptor.sql" level="TRACE"/>   

    <!-- 로그 레벨 설정 -->
    <root level="info">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>

</configuration>

