plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.jpaToyProject'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql:42.7.5'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// 기본 설정 끝

	// postgresql : PostgreSQL JDBC 드라이버 의존성 추가 ...2025.04.02 기준 최신 버전 42.7.5
	implementation("org.postgresql:postgresql:42.7.5")
	// log4jdbc-log4j2 : JDBC 드라이버를 감싸서 SQL 쿼리를 로깅하는 라이브러리 ...2025.04.02 기준 최신 버전 1.16
	implementation("org.bgee.log4jdbc-log4j2:log4jdbc-log4j2:1.16")

	// spring-boot-starter-web : Spring Boot Starter Web (웹 애플리케이션을 사용할 경우 필요)
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// 테스트 의존성 (선택사항)
	// testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	// Lombok : 자바 소스 코드를 작성할 때, Getter, Setter, toString, equals, hashCode 등의 메소드를 어노테이션으로 자동 생성해주는 라이브러리 ...2025.03.12 기준 최신 버전 1.18.36
 	compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

	// MapStruct : DTO <-> Entity 변환 라이브러리 ...2025.03.12 기준 최신 버전 1.6.3
	implementation 'org.mapstruct:mapstruct:1.6.3'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

	// javax validation : 자바 빈의 유효성 검사를 위한 API ...2025.03.12 기준 최신 버전 2.0.1.Final
	implementation 'javax.validation:validation-api:2.0.1.Final'

	/* SpringBoot Starter*/
	// MyBatis Spring Boot Starter : MyBatis를 사용하기 위한 스프링 부트 스타터 ...2025.03.12 기준 최신 버전 3.0.4
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	// Spring Boot Starter Data JPA : Spring Data JPA를 사용하기 위한 스프링 부트 스타터 ...2025.03.12 기준 최신 버전 3.5.0-SNAPSHOT
    // implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// JPA : 객체와 관계형 데이터베이스 간의 매핑을 정의하고, 기본적인 ORM 기능을 제공하는 api ...2025.03.12 기준 최신 버전 3.2
    // implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'
	// Hibernate : Hibernate는 JPA 명세에 맞춰 객체-관계 매핑을 구현한 프레임워크로, JPA를 사용하는 애플리케이션에서 실제로 데이터를 처리하는 ORM 기능을 제공하는 프레임워크 ...2025.03.12 기준 최신 버전 7.0.0.Beta4
    // implementation 'org.hibernate:hibernate-core:7.0.0.Beta4'

	// Spring Boot Starter Mail : Spring Boot Starter Mail (메일 전송을 사용할 경우 필요) ...2025.03.18 기준 최신 버전 3.4.3 
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	// Jakarta Mail : Jakarta Mail (메일 전송을 사용할 경우 필요) ...2025.03.18 기준 최신 버전 2.0.1
	implementation group: 'com.sun.mail', name: 'jakarta.mail', version: '2.0.1'
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources', 'src/main/java']
            include '**/repository/*.xml'  // repository/*.xml 파일 포함
        }
    }
}